<!DOCTYPE html>
<br>
<br>
<br>

<!-- Page Content -->
<div class="container">

  <div class="row">

    <div class="col-lg-3">
      <h1 class="my-4">방탈출 만들기</h1>
      <div class="list-group">
        <% @stages.each_with_index do |s, i|%>
        
          <% if s.id == @stage.id %>
            <% @stage_level= i+1 %>
            <%= link_to "Stage #{i+1} : #{s.title}", stage_manage_each_path(s.room_id, s.id) , :class => "list-group-item item-selected"%>
          <% else %>
            <%= link_to "Stage #{i+1} : #{s.title}",  stage_manage_each_path(s.room_id, s.id), :class => "list-group-item"%>
          <% end  %>
            
        <% end  %>
        
          <%= link_to "Add stage",  stage_create_path(@room.id) , :class => "list-group-item", method: :post  %>
      </div>
    </div>
    <!-- /.col-lg-3 -->

      <div class='col-lg-9'>

      
        <div class='card-header'>
        </div>
        <div class='card-body'>
            <div class='container'>
              <h2>Stage <%=@stage_level%></h2>
              <p>사진 및 동영상, 텍스트를 입력하세요.</p>
              <div class='row'>
                <div>
                  <% if @stage %>
                    <% if @edit_mode %>
                        <%= render 'form_manage_edit', stage: @stage%>
                    <% else %>
                        <%= render 'form_manage', stage: @stage%>
                    <% end %>
                  
                  
                    <% if !@edit_mode %>
                    
                          <%if @room.publish_stage_id < @stage.id %>
                            <%= link_to "수정하기",  stage_manage_edit_path(@room.id,@stage.id, edit_mode: true)  %>
                          
                            <form method='POST' action="<%=stage_delete_path(@stage.room_id) %>" style='display:inline'>
                              <%= hidden_field_tag :authenticity_token, form_authenticity_token %>
                              <input type='hidden' value='<%=@stage.id%>' name='stage_id'/>
                              <input type='submit' value='삭제하기' class='btn btn-default'/>
                            </form>
                            <%= link_to "배포하기",  room_publish_path(@room.id,@stage.id), method: :post  %>
                          <% end %>
                    <% end %>
                  <% end %>
    

                </div>
                
                </div>
              </div>
            </div>
      
          <hr>
        </div>
      
      <!-- /.card -->
      
    </div>
    <!-- /.col-lg-9 -->


</div>
<!-- /.container -->


<!-- Footer -->
<footer class="py-5 bg-dark">
  <div class="container">
    <p class="m-0 text-center text-white">Copyright &copy; 멋쟁이처럼 탈출하기 2018</p>
  </div>
  <!-- /.container -->
</footer>


<!--여기서 부터 자바스크립트입니다 -->
<script>

    //파일 선택기를 통해서 추가된 파일을 임시 저장하는 변수
	  var imgInput=null;
  
// html문서(document)가  준비(ready) 됬을때 중괄호 안에 내용을 실행해라. 즉 main함수와 같은 역할
$(document).ready( function() {
  
    //html문서(document)에 change(event type중 하나) 이벹트를 바인드 시킨다.
    // 두번쨰 parameter는 document의 자식중에서 .btn-file :file인 Element들에게만 이벤트를 바인딩 시킨다는 의미이다.
    $(document).on('change', '.btn-file :file', function() {
      var input = $(this),//여기는 나도 몰라 왜 ,일까
      
      //파일명중에서 특정 문자를 오류나지 않는 문자로 바꾼다.
		  label = input.val().replace(/\\/g, '/').replace(/.*\//, '');
		  
		  //??
		  input.trigger('fileselect', [label]);
		});

    //btn-file이라는 class를 가지고 :file인 element에  fileselect라는 이벤트를 바인딩 시킨다.
		$('.btn-file :file').on('fileselect', function(event, label) {
		  //input는 이 :file element(this)의 부모의 ???중에서 text를 찾고... ??모름
		    var input = $(this).parents('.input-group').find(':text'), log = label;
		    
		    if( input.length ) {
		      if(log.length)
		        input.val(log);
		    } else {
		        if( log ) alert(log);
		    }
		}); 
		
		//imgInp의 내용이 바뀔경우 아래의 함수를 실행한다.
		$("#imgInp").change(function(){
		  //imgInp(this)가 file이 등록된 경우에만 실행한다.
		    if (this.files && this.files[0]) {
		      //입력된 file의 정보를 imgInput변수에 임시저장한다.
		      imgInput = this;
		      //첨부 취소 버튼을 보여준다. 이때 inline는 한칸, block는 한줄로 인식되는 역할인다.
		      $("#btn_cancel").css("display","inline");
		      //미리보기 버튼을 보여준다.
		      $("#btn_preview").css("display","block");
		      //미리보기 이미지를 숨긴다.
	       $("#img-upload").css("display","none");
		    }
		});
		
		//rails같은 경우 서버 언어이기 때문에 아래와 같이 작성하면 javascript안에 상수값으로 변환된다.
		// if @stage 의 경우 @stage가 존재하면 if true로 변환되며 존재하지 않는 경우 if false로 변환된다.
		// 즉 페이지를 로드하는 순간의 @stage값을 기준으로 변환된다.
		
		// stage값이 있는 경우
		<% if @stage %>
		  //수정모드일때
		  if( <%=@edit_mode%>==false){
		    //이미지의 url을 stage변수에서 가져온다.
		    //:main와 같은 경우 carrierwave gem의 기능이며 이미지에 여러가지 버전중에 main버전을 가져오는 것을 의미한다.
		    //이는 app/upladers/image_uploader.rb파일에 명시되있다.
		    var img_url = "<%=@stage.image.url(:main) %>";
		    
		    //이미지 URL을 가지고 이미지를 띄어준다.
  		  setImage(img_url);
		    
		  //읽기모드 일때
		  }else{
		    //img-upload버튼을 숨긴다.
		    $("#img-upload").css("display","none");
		    //서버에 해당 stage의 이미지가 있는 경우
		    if("<%=@stage_file_name %>".length){
		      //첨부 취소 버튼과 미리보기 버튼을 보여준다.
		      $("#btn_cancel").css("display","inline");
		      $("#btn_preview").css("display","block");
		    }else{
		      //등록된 파일이 없는 경우는 숨긴다.
		      $("#btn_cancel").css("display","none");
		      $("#btn_preview").css("display","none");
		    }
		  }
		  
		<% end %>
	});
	
	//이미지 url을 받아서 img Tag의 src값을 바꿔준다.
	function setImage(img_url){
		  $('#img-upload').attr('src', img_url);
	}
	
	
	//미리 보기 버튼을 눌렀을 때 발생하는 이벤트
	function showImage(){
	  //이미지 태그를 보여준다.
	  $("#img-upload").css("display","block")
	  
	  //파일 선택기를 통해서 선택된 이미지가 있다면
	  if(imgInput)
	    //선택된 파일을 가지고 이미지를 보여준다.
	    readURL(imgInput);
	 //선택된 파일은 없지만 등록된 이미지 파일이 있을 경우는
	  else if("<%=@stage_file_name %>".length){
	    //등록된 이미지의 thumb 버전의 이미지 url을 가져오고 만약에 없을 경우는 빈 문자열'' 으로 지정된다.
		  var img_url = "<%=@stage ? @stage.image.url(:thumb) : '' %>";
	     //등록된 이미지 url을 이미지로 보여준다.
  		  setImage(img_url);
	  }
	  //미리보기 버튼을 안보이게 한다.
	  $("#btn_preview").css("display","none")
	}
	
	//첨부된 이미지를 삭제하는 경우
	function cancelImage(){
	  //임시 저장된 파일을 비워준다.
	  imgInput=null;
	  //첨부된 파일의 이름을 보여주는 element를 비워분다.
	  $('.btn-file :file').parents('.input-group').find(':text').val("");
	  //첨부된 파일의 값을 비워준다.
	  $("#imgInp").val('');
	  //미리보기 버튼을 숨긴다.
	  $("#btn_preview").css("display","none");
	  //삭제 버튼을 숨긴다.
	  $("#btn_cancel").css("display","none");
	  //이미지 tag를 비운다.
	  $('#img-upload').attr("src","");
	  
	  //기존에 있던 파일을 삭제했는지 여부를 갱신시켜준다.
	  //이게 있는 이유는 원래 있던 파일을 삭제 한것인지 아닌지를 판단하기 위함이다.
	  $('#is_delete').val(true);
	}
	
	//파일 선택기로 선택된 이미지를 띄어준다.
	function readURL(input) {
	  if (input.files && input.files[0]) {
	    
	    var reader = new FileReader();
	    reader.onload = function (e) {
	      $('#img-upload').attr('src', e.target.result);
	    }
		  reader.readAsDataURL(input.files[0]);
	  }
}
</script>